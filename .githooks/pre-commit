#!/bin/bash
# Pre-commit hook for TypeScript linting and type checking

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Running pre-commit checks...${NC}"

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
  echo -e "${RED}‚ùå Error: package.json not found. Are you in the project root?${NC}"
  exit 1
fi

# Get the list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Filter for TypeScript files
TS_FILES=$(echo "$STAGED_FILES" | grep -E '\.(ts|tsx)$' || true)

if [ -z "$TS_FILES" ]; then
  echo -e "${GREEN}‚úì No TypeScript files to check${NC}"
  exit 0
fi

echo -e "${YELLOW}üìù Staged TypeScript files:${NC}"
echo "$TS_FILES" | sed 's/^/  /'

# Run TypeScript type checking
echo -e "\n${YELLOW}‚öôÔ∏è  Running TypeScript type checking...${NC}"
if npx tsc --noEmit; then
  echo -e "${GREEN}‚úì TypeScript type checking passed${NC}"
else
  echo -e "${RED}‚ùå TypeScript type checking failed${NC}"
  echo -e "${RED}Please fix the type errors and try again.${NC}"
  exit 1
fi

# Run ESLint if .eslintrc exists
if [ -f ".eslintrc" ] || [ -f ".eslintrc.json" ] || [ -f ".eslintrc.js" ]; then
  echo -e "\n${YELLOW}üìã Running ESLint...${NC}"
  if npx eslint $TS_FILES --max-warnings 0; then
    echo -e "${GREEN}‚úì ESLint passed${NC}"
  else
    echo -e "${RED}‚ùå ESLint failed${NC}"
    echo -e "${RED}Please fix the linting errors and try again.${NC}"
    exit 1
  fi
else
  echo -e "\n${YELLOW}‚ÑπÔ∏è  ESLint not configured, skipping...${NC}"
fi

echo -e "\n${GREEN}‚úÖ All pre-commit checks passed!${NC}"
exit 0
